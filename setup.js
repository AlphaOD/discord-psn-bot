/**
 * Discord PSN Bot Setup Script
 * 
 * Interactive setup wizard to configure the bot
 * Creates .env file and registers Discord commands
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

console.log('🎮 Discord PSN Bot Setup Wizard\n');
console.log('This wizard will help you configure your Discord PSN Bot.\n');

const questions = [
    {
        key: 'DISCORD_TOKEN',
        question: '🤖 Enter your Discord Bot Token: ',
        required: true,
        validate: (value) => value.length > 50
    },
    {
        key: 'DISCORD_CLIENT_ID',
        question: '🔑 Enter your Discord Application ID: ',
        required: true,
        validate: (value) => /^\d+$/.test(value)
    },
    {
        key: 'DATABASE_PATH',
        question: '💾 Database file path (default: ./data/bot.db): ',
        required: false,
        default: './data/bot.db'
    },
    {
        key: 'LOG_LEVEL',
        question: '📝 Log level (debug/info/warn/error) [default: info]: ',
        required: false,
        default: 'info',
        validate: (value) => ['debug', 'info', 'warn', 'error'].includes(value.toLowerCase())
    }
];

async function askQuestion(question) {
    return new Promise((resolve) => {
        rl.question(question.question, (answer) => {
            if (!answer && question.default) {
                resolve(question.default);
            } else if (!answer && question.required) {
                console.log('❌ This field is required. Please try again.\n');
                askQuestion(question).then(resolve);
            } else if (question.validate && !question.validate(answer)) {
                console.log('❌ Invalid input. Please try again.\n');
                askQuestion(question).then(resolve);
            } else {
                resolve(answer);
            }
        });
    });
}

async function setup() {
    try {
        console.log('📋 Please provide the following information:\n');
        
        const config = {};
        
        for (const question of questions) {
            const answer = await askQuestion(question);
            config[question.key] = answer;
        }
        
        // Create .env file
        const envContent = Object.entries(config)
            .map(([key, value]) => `${key}=${value}`)
            .join('\n');
        
        const envTemplate = `# Discord PSN Bot Configuration
# Generated by setup wizard on ${new Date().toISOString()}

${envContent}

# Optional: Uncomment and configure these settings
# LOG_FILE=./logs/bot.log
# TROPHY_CHECK_CRON=*/30 * * * *
# PSN_API_DELAY=2000
`;
        
        fs.writeFileSync('.env', envTemplate);
        console.log('\n✅ Created .env file');
        
        // Create necessary directories
        const dataDir = path.dirname(config.DATABASE_PATH);
        if (!fs.existsSync(dataDir)) {
            fs.mkdirSync(dataDir, { recursive: true });
            console.log(`✅ Created directory: ${dataDir}`);
        }
        
        const logsDir = './logs';
        if (!fs.existsSync(logsDir)) {
            fs.mkdirSync(logsDir, { recursive: true });
            console.log(`✅ Created directory: ${logsDir}`);
        }
        
        // Register Discord commands
        console.log('\n🔄 Registering Discord slash commands...');
        
        const { REST, Routes } = require('discord.js');
        const rest = new REST({ version: '10' }).setToken(config.DISCORD_TOKEN);
        
        // Load commands
        const commands = [];
        const commandsPath = path.join(__dirname, 'src', 'commands');
        
        if (fs.existsSync(commandsPath)) {
            const commandFiles = fs.readdirSync(commandsPath).filter(file => file.endsWith('.js'));
            
            for (const file of commandFiles) {
                const command = require(path.join(commandsPath, file));
                commands.push(command.data.toJSON());
            }
        }
        
        if (commands.length > 0) {
            await rest.put(
                Routes.applicationCommands(config.DISCORD_CLIENT_ID),
                { body: commands }
            );
            console.log(`✅ Registered ${commands.length} slash command(s)`);
        }
        
        console.log('\n🎉 Setup complete! Your Discord PSN Bot is ready to run.\n');
        console.log('📝 Next steps:');
        console.log('1. Run "npm start" to start the bot');
        console.log('2. Invite the bot to your Discord server');
        console.log('3. Use "/link" to connect your PSN account');
        console.log('4. Enjoy automatic trophy tracking!\n');
        
        console.log('🔗 Invite URL:');
        console.log(`https://discord.com/api/oauth2/authorize?client_id=${config.DISCORD_CLIENT_ID}&permissions=2147534912&scope=bot%20applications.commands\n`);
        
    } catch (error) {
        console.error('❌ Setup failed:', error.message);
        
        if (error.code === 'ENOENT') {
            console.log('\n💡 Make sure you have run "npm install" first.');
        } else if (error.code === 50035) {
            console.log('\n💡 Invalid Discord token. Please check your bot token.');
        }
        
        process.exit(1);
    } finally {
        rl.close();
    }
}

// Run setup
setup(); 